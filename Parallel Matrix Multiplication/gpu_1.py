# -*- coding: utf-8 -*-
"""GPU_1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IMsqGIvnk0QJpSzaeguotnC_msWavhRb
"""

# Commented out IPython magic to ensure Python compatibility.
!nvcc --version
!pip install git+https://github.com/andreinechaev/nvcc4jupyter.git
# %load_ext nvcc_plugin

!unzip EvaluationScript.zip

# Commented out IPython magic to ensure Python compatibility.
# %cd ..

# Commented out IPython magic to ensure Python compatibility.
# %cd EvaluationScript

!chmod +x evaluate.sh

!./evaluate.sh

!nvcc main.cu
!./a.out <input.txt

# Commented out IPython magic to ensure Python compatibility.
# %cd testcases

import numpy as np
n_testcases = 5
for i in range(n_testcases):
  p, q, r = np.random.randint(993,1025,size=3)
  A = np.random.randint(-10,11,size = (p,q))
  B = np.random.randint(-10,11,size = (q,r))
  C = np.zeros((p,q))
  D = np.zeros((r,q))
  # C = np.random.randint(-10,11,size = (p,q))
  # D = np.random.randint(-10,11,size = (r,q))
  # A = np.zeros((p,q))
  # B = np.zeros((q,r))
  E = np.matmul(A,B) #+ np.matmul(C,D.T)

  f_out = open("output/output"+str(i+1)+".txt", 'w')
  for row in E:
    s = ""
    for col in row:
      s += str(col) + " "
    s += "\n"
    f_out.write(s)
  f_out.close()


  f_in = open("input/input"+str(i+1)+".txt", 'a')
  f_in.write(str(p)+"\n"+str(q)+"\n"+str(r)+"\n")
  for row in A:
    s = ""
    for col in row:
      s += str(col) + " "
    s += "\n"
    f_in.write(s)
  for row in B:
    s = ""
    for col in row:
      s += str(col) + " "
    s += "\n"
    f_in.write(s)
  for row in C:
    s = ""
    for col in row:
      s += str(col) + " "
    s += "\n"
    f_in.write(s)
  for row in D:
    s = ""
    for col in row:
      s += str(col) + " "
    s += "\n"
    f_in.write(s)
  f_in.close()

!zip EvaluationScript